{"version":3,"file":"static/js/155.fa6bcf3b.chunk.js","mappings":"+SAGaA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,smBA0BRE,EAAmBF,EAAAA,GAAAA,IAAH,gFAMhBG,EAAcH,EAAAA,GAAAA,IAAH,2NAUXI,EAAiBJ,EAAAA,GAAAA,GAAH,kLAQdK,EAAYL,EAAAA,GAAAA,GAAH,+DAKTM,EAAQN,EAAAA,GAAAA,IAAH,0H,SCqBlB,EAlEc,WAAO,IAAD,QAClB,GAAkCO,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAUjB,IARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,qGACKC,EAAAA,EAAAA,IAAeN,GADpB,OACTO,EADS,OAEfR,EAAaQ,GAFE,2CAAH,qDAIdF,GACD,GAAE,CAACL,IAECF,EAAL,CAIA,IAAQU,EAAuDV,EAAvDU,MAAOC,EAAgDX,EAAhDW,aAAcC,EAAkCZ,EAAlCY,SAAUC,EAAwBb,EAAxBa,OAAQC,EAAgBd,EAAhBc,YAE/C,OACE,6BACE,UAACvB,EAAD,CAAUwB,GAAE,oBAAEX,EAASY,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAtC,WACE,SAAC,KAAD,KACA,0CAEF,UAACvB,EAAD,WACGoB,IACC,SAAChB,EAAD,CACEoB,IAAG,6CAAwCJ,GAC3CK,IAAG,gBAAWT,EAAX,WACHU,MAAM,SAGV,UAACzB,EAAD,YACE,wBAAKe,KACL,wCAAgBW,KAAKC,MAAqB,GAAfX,GAA3B,QACA,sCACA,uBAAIC,KACJ,oCACA,wBACGC,EAAOU,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,MAAjBD,EAAME,GADA,aAMvB,SAAC9B,EAAD,sCACA,UAACC,EAAD,YACE,yBACE,SAACN,EAAD,CAAUwB,GAAG,OAAOC,MAAO,CAAEC,KAAI,UAAEb,EAASY,aAAX,aAAE,EAAgBC,MAAnD,qBAIF,yBACE,SAAC1B,EAAD,CAAUwB,GAAG,UAAUC,MAAO,CAAEC,KAAI,UAAEb,EAASY,aAAX,aAAE,EAAgBC,MAAtD,2BAKJ,SAAC,EAAAU,SAAD,CAAUC,UAAU,qCAApB,UACE,SAAC,KAAD,QA7CL,CAiDF,C,mMC3EDC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACVF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD/B,cACzBE,EADyB,yBAExBA,EAAOC,KAAKC,SAFY,2CAAH,qDAKjBC,EAAe,mCAAG,WAAMC,GAAN,uFACRP,EAAAA,EAAAA,IAAA,gCACMC,EADN,kBACuBM,IAFf,cACvBJ,EADuB,yBAItBA,EAAOC,KAAKC,SAJU,2CAAH,sDAOf1B,EAAc,mCAAG,WAAMkB,GAAN,uFACPG,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,oBAAkCI,IAD3B,cACtBE,EADsB,yBAErBA,EAAOC,MAFc,2CAAH,sDAKdI,EAAO,mCAAG,WAAMX,GAAN,uFACAG,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,4BAA0CI,IAD1C,cACfE,EADe,yBAEdA,EAAOC,KAAKK,MAFE,2CAAH,sDAKPC,EAAU,mCAAG,WAAMb,GAAN,uFACHG,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,4BAA0CI,IADvC,cAClBE,EADkB,yBAEjBA,EAAOC,KAAKC,SAFK,2CAAH,qD","sources":["pages/Movie/Movie.styled.jsx","pages/Movie/Movie.jsx","services/getMovies.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const SiteLink = styled(Link)`\n  display: flex;\n  column-gap: 5px;\n  margin: 30px;\n  align-items: center;\n  justify-content: center;\n  width: 120px;\n  height: 30px;\n  padding: 5px;\n  border: 1px solid black;\n  font-size: 19px;\n  font-weight: 800;\n  color: #e3caa5;\n  background-color: #ad8b73;\n  border: 1px solid #e3caa5;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,\n    rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\n  transition: color 250ms ease, background-color 250ms ease, border 250ms ease;\n\n  &:hover {\n    color: #ad8b73;\n    background-color: #e3caa5;\n    border: 1px solid #ad8b73;\n  }\n`;\n\nexport const MovieInfoWrapper = styled.div`\n  display: flex;\n  column-gap: 40px;\n  margin: 30px;\n`;\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 30px;\n  color: #ad8b73;\n  font-size: 20px;\n  text-shadow: -1px -1px 1px rgba(255, 255, 255, 0.1),\n    1px 1px 1px rgba(0, 0, 0, 0.5);\n`;\n\nexport const AdditionalInfo = styled.h4`\n  margin-left: 30px;\n  color: #ad8b73;\n  font-size: 30px;\n  text-shadow: -1px -1px 1px rgba(255, 255, 255, 0.1),\n    1px 1px 1px rgba(0, 0, 0, 0.5);\n`;\n\nexport const LinksList = styled.ul`\n  display: flex;\n  column-gap: 30px;\n`;\n\nexport const Image = styled.img`\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,\n    rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { getSingleMovie } from 'services/getMovies';\nimport { IoMdArrowRoundBack } from 'react-icons/io';\nimport {\n  SiteLink,\n  MovieInfoWrapper,\n  InfoWrapper,\n  AdditionalInfo,\n  LinksList,\n  Image,\n} from './Movie.styled';\n\nconst Movie = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const getMovie = async () => {\n      const movie = await getSingleMovie(movieId);\n      setMovieInfo(movie);\n    };\n    getMovie();\n  }, [movieId]);\n\n  if (!movieInfo) {\n    return;\n  }\n\n  const { title, vote_average, overview, genres, poster_path } = movieInfo;\n\n  return (\n    <main>\n      <SiteLink to={location.state?.from ?? '/'}>\n        <IoMdArrowRoundBack />\n        <span>Go back</span>\n      </SiteLink>\n      <MovieInfoWrapper>\n        {poster_path && (\n          <Image\n            src={`https://image.tmdb.org/t/p/original${poster_path}`}\n            alt={`Movie ${title} poster`}\n            width=\"300\"\n          />\n        )}\n        <InfoWrapper>\n          <h2>{title}</h2>\n          <p>User score: {Math.round(vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <ul>\n            {genres.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </ul>\n        </InfoWrapper>\n      </MovieInfoWrapper>\n      <AdditionalInfo>Additional information</AdditionalInfo>\n      <LinksList>\n        <li>\n          <SiteLink to=\"cast\" state={{ from: location.state?.from }}>\n            Cast\n          </SiteLink>\n        </li>\n        <li>\n          <SiteLink to=\"reviews\" state={{ from: location.state?.from }}>\n            Reviews\n          </SiteLink>\n        </li>\n      </LinksList>\n      <Suspense fallback={<div>Loading</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default Movie;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'f482511e908c5491e9f1e2c33a3c3db7';\n\nexport const getTrendingMovies = async () => {\n  const result = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return result.data.results;\n};\n\nexport const getMoviesByName = async query => {\n  const result = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return result.data.results;\n};\n\nexport const getSingleMovie = async id => {\n  const result = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return result.data;\n};\n\nexport const getCast = async id => {\n  const result = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return result.data.cast;\n};\n\nexport const getReviews = async id => {\n  const result = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return result.data.results;\n};\n"],"names":["SiteLink","styled","Link","MovieInfoWrapper","InfoWrapper","AdditionalInfo","LinksList","Image","useState","movieInfo","setMovieInfo","movieId","useParams","location","useLocation","useEffect","getMovie","getSingleMovie","movie","title","vote_average","overview","genres","poster_path","to","state","from","src","alt","width","Math","round","map","genre","name","id","Suspense","fallback","axios","API_KEY","getTrendingMovies","result","data","results","getMoviesByName","query","getCast","cast","getReviews"],"sourceRoot":""}