{"version":3,"file":"static/js/387.20eaabb7.chunk.js","mappings":"sRAEaA,EAAcC,EAAAA,GAAAA,GAAH,2GAOXC,EAASD,EAAAA,GAAAA,GAAH,oLAQNE,EAAUF,EAAAA,GAAAA,GAAH,kL,SCmBpB,EA/BgB,WACd,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,qGACKC,EAAAA,EAAAA,IAAWJ,GADhB,OACfK,EADe,OAErBN,EAAWM,GAFU,2CAAH,qDAIpBF,GACD,GAAE,CAACH,KAGF,8BACsB,IAAnBF,EAAQQ,QACP,SAACV,EAAD,yDAEA,SAACH,EAAD,UACGK,EAAQS,KAAI,SAAAC,GAAM,OACjB,2BACE,SAACb,EAAD,UAASa,EAAOC,UAChB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,OAU5B,C,mMChCDC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACVF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD/B,cACzBE,EADyB,yBAExBA,EAAOC,KAAKC,SAFY,2CAAH,qDAKjBC,EAAe,mCAAG,WAAMC,GAAN,uFACRP,EAAAA,EAAAA,IAAA,gCACMC,EADN,kBACuBM,IAFf,cACvBJ,EADuB,yBAItBA,EAAOC,KAAKC,SAJU,2CAAH,sDAOfG,EAAc,mCAAG,WAAMT,GAAN,uFACPC,EAAAA,EAAAA,IAAA,iBAAoBD,EAApB,oBAAkCE,IAD3B,cACtBE,EADsB,yBAErBA,EAAOC,MAFc,2CAAH,sDAKdK,EAAO,mCAAG,WAAMV,GAAN,uFACAC,EAAAA,EAAAA,IAAA,iBAAoBD,EAApB,4BAA0CE,IAD1C,cACfE,EADe,yBAEdA,EAAOC,KAAKM,MAFE,2CAAH,sDAKPlB,EAAU,mCAAG,WAAMO,GAAN,uFACHC,EAAAA,EAAAA,IAAA,iBAAoBD,EAApB,4BAA0CE,IADvC,cAClBE,EADkB,yBAEjBA,EAAOC,KAAKC,SAFK,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/getMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  row-gap: 30px;\n  padding: 0 30px;\n`;\n\nexport const Author = styled.h3`\n  margin-bottom: 25px;\n  color: #ad8b73;\n  font-size: 35px;\n  text-shadow: -1px -1px 1px rgba(255, 255, 255, 0.1),\n    1px 1px 1px rgba(0, 0, 0, 0.5);\n`;\n\nexport const Message = styled.h3`\n  margin-left: 30px;\n  color: #ad8b73;\n  font-size: 35px;\n  text-shadow: -1px -1px 1px rgba(255, 255, 255, 0.1),\n    1px 1px 1px rgba(0, 0, 0, 0.5);\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from '../../services/getMovies';\nimport { Author, ReviewsList, Message } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getUserReviews = async () => {\n      const userReviews = await getReviews(movieId);\n      setReviews(userReviews);\n    };\n    getUserReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length === 0 ? (\n        <Message>We don't have any reviews for this movie.</Message>\n      ) : (\n        <ReviewsList>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <Author>{review.author}</Author>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ReviewsList>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'f482511e908c5491e9f1e2c33a3c3db7';\n\nexport const getTrendingMovies = async () => {\n  const result = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return result.data.results;\n};\n\nexport const getMoviesByName = async query => {\n  const result = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return result.data.results;\n};\n\nexport const getSingleMovie = async id => {\n  const result = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return result.data;\n};\n\nexport const getCast = async id => {\n  const result = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return result.data.cast;\n};\n\nexport const getReviews = async id => {\n  const result = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return result.data.results;\n};\n"],"names":["ReviewsList","styled","Author","Message","useState","reviews","setReviews","movieId","useParams","useEffect","getUserReviews","getReviews","userReviews","length","map","review","author","content","id","axios","API_KEY","getTrendingMovies","result","data","results","getMoviesByName","query","getSingleMovie","getCast","cast"],"sourceRoot":""}