{"version":3,"file":"static/js/736.a881e8ab.chunk.js","mappings":"sRAEaA,EAAWC,EAAAA,GAAAA,GAAH,uJASRC,EAAWD,EAAAA,GAAAA,GAAH,qeAkBRE,EAAQF,EAAAA,GAAAA,IAAH,0H,SCkBlB,EAzCa,SAAC,GAAuB,IAArBG,EAAoB,EAApBA,cACd,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,qGACKC,EAAAA,EAAAA,IAAQJ,GADb,OACVK,EADU,OAEhBN,EAAQM,GAFQ,2CAAH,qDAIfF,GACD,GAAE,CAACH,KAGF,SAACR,EAAD,UACGM,EAAKQ,KAAI,SAAAC,GACR,OACE,UAACb,EAAD,YACE,SAACC,EAAD,CACEa,IACED,EAAME,aAAN,UACOb,GADP,OACuBW,EAAME,cACzB,6DAENC,IAAKH,EAAMI,KACXC,MAAM,SAER,4BACE,wBAAKL,EAAMI,QACX,uCAAeJ,EAAMM,kBAZVN,EAAMO,GAgBxB,KAGN,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  column-gap: 20px;\n  row-gap: 20px;\n  margin-left: 30px;\n`;\n\nexport const ListItem = styled.li`\n  width: calc((100% - 180px) / 6);\n  display: flex;\n  row-gap: 20px;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,\n    rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\n  background-color: #e3caa5;\n  padding: 20px 0;\n  text-align: center;\n  color: #ad8b73;\n  font-size: 20px;\n  text-shadow: -1px -1px 1px rgba(255, 255, 255, 0.1),\n    1px 1px 1px rgba(0, 0, 0, 0.5);\n`;\n\nexport const Image = styled.img`\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,\n    rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\n`;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from '../../services/getMovies';\nimport { CastList, ListItem, Image } from './Cast.styled';\n\nconst Cast = ({ imageBaseLink }) => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getActors = async () => {\n      const actors = await getCast(movieId);\n      setCast(actors);\n    };\n    getActors();\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {cast.map(actor => {\n        return (\n          <ListItem key={actor.id}>\n            <Image\n              src={\n                actor.profile_path\n                  ? `${imageBaseLink}${actor.profile_path}`\n                  : 'https://img.icons8.com/ios/512/gender-neutral-user--v1.png'\n              }\n              alt={actor.name}\n              width=\"150\"\n            />\n            <div>\n              <h2>{actor.name}</h2>\n              <p>Character: {actor.character}</p>\n            </div>\n          </ListItem>\n        );\n      })}\n    </CastList>\n  );\n};\n\nCast.propTypes = {\n  imageBaseLink: PropTypes.string.isRequired,\n};\n\nexport default Cast;\n"],"names":["CastList","styled","ListItem","Image","imageBaseLink","useState","cast","setCast","movieId","useParams","useEffect","getActors","getCast","actors","map","actor","src","profile_path","alt","name","width","character","id"],"sourceRoot":""}